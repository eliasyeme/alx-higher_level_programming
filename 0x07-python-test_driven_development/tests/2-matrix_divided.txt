==============================
How to Use 2-matrix_divided.py
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided()`` returns a new matrix with all elements divided by ``div``.

::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Quotients are rounded to two decimal places.
::
	>>> matrix = [
	...     [6, 7, 8],
	...     [8, 7, 6]
	... ]
	>>> matrix_divided(matrix, 3)
	[[2.0, 2.33, 2.67], [2.67, 2.33, 2.0]]

The original matrix is left unchanged.
::
	>>> matrix
	[[6, 7, 8], [8, 7, 6]]

The function can also handle floating-point numbers.
::
	>>> m = [[1.2, 3.4], [2.1, 4.3]]
	>>> matrix_divided(m, 0.5)
	[[2.4, 6.8], [4.2, 8.6]]

Integers and floats can be combined.
::
	>>> matrix_divided([[2, 2.5], [3.9, 2]], 2)
	[[1.0, 1.25], [1.95, 1.0]]

::
	>>> matrix_divided([[]], 2)
	[[]]

Excpected errors for ``matrix``
==============================

If ``matrix`` is not a list of list with ints or floats,
a TypeError is raised.
::
	>>> matrix_divided("", 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix_divided(None, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix_divided([], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix_divided([[2, 3],["", 4]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

If any rows are different in sizes, TypeError is raised.
::
	>>> matrix_divided([[2],[2, 3]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Excpected errors for ``div``
==============================

If ``div`` is not an int or float a TypeError is raised.
::
	>>> matrix_divided([[]], "")
	Traceback (most recent call last):
	TypeError: div must be a number

::
	>>> matrix_divided([[]], None)
	Traceback (most recent call last):
	TypeError: div must be a number

If ``div`` is zero, ZeroDivisionError is raised.
::
	>>> matrix_divided([[]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
